DROP ALL OBJECTS;

CREATE TABLE IF NOT EXISTS users
(
    user_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    email VARCHAR(100) NOT NULL,
    login VARCHAR(25) NOT NULL,
    name VARCHAR(50),
    birthday DATE NOT NULL
);

CREATE TABLE IF NOT EXISTS directors
(
    director_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    director_name VARCHAR(40) NOT NULL
);

CREATE TABLE IF NOT EXISTS genres
(
    genre_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    genre_name VARCHAR(40) NOT NULL
);

CREATE TABLE IF NOT EXISTS mpa_ratings
(
    mpa_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    mpa_name VARCHAR(40)
);

CREATE TABLE IF NOT EXISTS films
(
    film_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(25) NOT NULL,
    description VARCHAR(200) NOT NULL,
    release_date TIMESTAMP NOT NULL,
    likes INTEGER,
    duration INTEGER NOT NULL,
    mpa_id INTEGER REFERENCES mpa_ratings (mpa_id)
);

CREATE TABLE IF NOT EXISTS friends
(
    user_id INTEGER NOT NULL REFERENCES users (user_id),
    friend_id INTEGER NOT NULL REFERENCES users (user_id),
    CONSTRAINT PK_Friendship PRIMARY KEY (user_id, friend_id)
);

CREATE TABLE IF NOT EXISTS likes
(
    film_id INTEGER NOT NULL REFERENCES films (film_id) ON DELETE CASCADE,
    user_id INTEGER NOT NULL REFERENCES users (user_id) ON DELETE CASCADE,
    CONSTRAINT PK_Like PRIMARY KEY (film_id, user_id)
);

CREATE TABLE IF NOT EXISTS film_genre
(
    film_id INTEGER NOT NULL REFERENCES films (film_id) ON DELETE CASCADE,
    genre_id INTEGER NOT NULL REFERENCES genres (genre_id)
);

CREATE TABLE IF NOT EXISTS films_directors
(
    film_id INTEGER NOT NULL REFERENCES films (film_id) ON DELETE CASCADE,
    director_id INTEGER NOT NULL REFERENCES directors (director_id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS reviews
(
    review_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    content VARCHAR(200) NOT NULL,
    is_positive BOOLEAN NOT NULL,
    film_id INTEGER NOT NULL REFERENCES films(film_id) ON DELETE CASCADE,
    user_id INTEGER NOT NULL REFERENCES users(user_id) ON DELETE CASCADE,
    useful INTEGER
);

CREATE TABLE IF NOT EXISTS reviews_likes
(
    review_id INTEGER NOT NULL REFERENCES reviews(review_id) ON DELETE CASCADE,
    user_id INTEGER NOT NULL REFERENCES users(user_id) ON DELETE CASCADE,
    is_like BOOLEAN NOT NULL
);

CREATE TABLE IF NOT EXISTS feed
(
event_id   INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
timestamp  BIGINT      NOT NULL,
user_id    INTEGER     NOT NULL REFERENCES users(user_id) ON DELETE CASCADE,
event_type VARCHAR(10) NOT NULL,
operation  VARCHAR(10) NOT NULL,
entity_id  INTEGER     NOT NULL
);
